* Make it work multiplatform (Windows and OS/X)
* Option groups. Group of options that are placed inside the same tk.LabelFrame
* Graphical dependencies editor
* Sections dependencies (a section activation depending on an option value)
* Option type displaying a radio buttons group (instead of a combo box)
* Option type displaying a checkbuttons group for multiple selection (List option type)
* Idea: a section subsections could be displayed with a tk.Notebook widget, in different tabs in the section editing screen.
* Configurator configuration using Configurator (bootstrap)
* Configurations editing layout configuration (for instance, whether to display subsections as tab or not, etc). This should be serialized as a <settings> in the configurator.config file.
* Make configuration schemas and configuration transactional objects for better manipulation and editing??
* Font chooser
* Manual
* tk manual viewer??
* 'Maybe' option type. The 'maybe' option type is a composite type. It can contain another option type or nothing.
  It can be seen as the equivalent of Haskell's Maybe type.
* 'Many' option type. The 'many' option type is a composite type. Options of thi
* Custom option types. The user can create his own option types from the "setup" interface. Custom option types are created from a combination of other existing option types. The custom option types are serialized to the schema file. For instance, a new "Asset" custom option type could be formed form a title (string) and file location (filename).
* Tests. Unit tests.
* Bug fixing
  
